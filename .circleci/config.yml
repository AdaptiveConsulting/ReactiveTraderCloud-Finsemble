version: 2.1

orbs:
  win: circleci/windows@2.4.0
  node: circleci/node@4.7.0

commands:
  pull_installer:
    parameters:
      cloud_bucket:
        type: string
    steps:
      - run:
          name: Authenticate with gcloud
          command: |
            echo $BASH_ENV
            echo $GCLOUD_SERVICE_KEY | gcloud auth activate-service-account --key-file=-
            gcloud config set project ${GOOGLE_PROJECT_ID}
      - run:
          name: Copy installer from GCS
          command: 'gsutil -m cp -r gs://<<parameters.cloud_bucket>>/pkg .'
      - persist_to_workspace:
          root: .
          paths:
            - pkg

  build:
    parameters:
      env:
        type: string
    steps:
      - checkout
      - attach_workspace:
          at: ~/ci_build/
      - run:
          name: Install node
          command: 'nvm install 16'
      - run:
          name: Set node version
          command: 'nvm use 16'
      - run:
          name: Install yarn
          command: 'npm install -g yarn'
      - run:
          name: 'Authenticate with registry'
          command: 'echo "//registry.npmjs.org/:_authToken=$NPM_AUTH_TOKEN" > ~/ci_build/.npmrc'
          shell: bash.exe
      - run:
          name: 'Install NPM Packages'
          command: 'yarn install'
      - save_cache:
          paths:
            - node_modules
          key: 'v1-dependencies-{{ checksum "package.json" }}'
      - run:
          name: 'Build Production Assets'
          command: 'yarn build:prod'
      - store_artifacts:
          path: ~/ci_build/node_modules/electron-winstaller/vendor/signtool.exe
          destination: signtool.exe
      - run:
          name: 'List all files here'
          command: 'ls'
      - run:
          name: 'Build Production Package'
          command: 'yarn makeInstaller:<<parameters.env>>'
      - run:
          name: 'Copy assets and build'
          command: 'cp -r ~/ci_build/public/* ~/ci_build'
      - run:
          name: 'Add Installer to Production Assets'
          command: 'cp -r ~/ci_build/pkg ~/ci_build/docs'
      - run:
          name: 'Zip and Create DROP'
          command: tar -cvf DROP.tar.gz -C ~/ci_build/docs .
          shell: bash.exe
      - store_artifacts:
          path: ~/ci_build/DROP.tar.gz
          destination: DROP.tar.gz
      - persist_to_workspace:
          root: .
          paths:
            - DROP.tar.gz

  deploy:
    parameters:
      cloud_bucket:
        type: string
    steps:
      - attach_workspace:
          at: ~/ci_build/
      - run:
          name: 'Deployment information'
          command: |
            echo "Deploying Build $CIRCLE_BUILD_NUM"
      - run:
          name: Authenticate with gcloud
          command: |
            echo $BASH_ENV
            echo $GCLOUD_SERVICE_KEY | gcloud auth activate-service-account --key-file=-
            gcloud config set project ${GOOGLE_PROJECT_ID}
      - run:
          name: Delete GCS Bucket Contents
          command: |
            gsutil -m rm 'gs://<<parameters.cloud_bucket>>/**'
      - run:
          name: Copy artifacts to GCS
          command: |
            cd ~/ci_build/
            tar -xvf DROP*.tar.gz
            gsutil -m cp -r * gs://<<parameters.cloud_bucket>>

jobs:
  pull_uat_installer:
    description: 'Pull current installer from UAT GCS'
    docker:
      - image: google/cloud-sdk
    steps:
      - pull_installer:
          cloud_bucket: 'reactive-trader-finsemble-uat'

  # pull_prod_installer:
  #   description: 'Pull current installer from production GCS'
  #   docker:
  #     - image: google/cloud-sdk
  #   steps:
  #     - pull_installer:
  #         cloud_bucket: 'reactive-trader-finsemble'

  build_uat:
    executor: win/default
    working_directory: ~/ci_build
    steps:
      - build:
          env: 'uat'

  # build_prod:
  #   executor: win/default
  #   working_directory: ~/ci_build
  #   steps:
  #     - build:
  #         env: 'prod'

  deploy_uat:
    description: 'Deploy Artifacts to UAT GCS'
    docker:
      - image: google/cloud-sdk
    steps:
      - deploy:
          cloud_bucket: 'reactive-trader-finsemble-uat'

  # deploy_prod:
  #   description: 'Deploy Artifacts to production GCS'
  #   docker:
  #     - image: google/cloud-sdk
  #   steps:
  #     - deploy:
  #         cloud_bucket: 'reactive-trader-finsemble'

workflows:
  version: 2
  UAT_Workflow:
    jobs:
      - pull_uat_installer
      - build_uat:
          requires:
            - pull_uat_installer
      - deploy_uat:
          requires:
            - build_uat

  # Prod_Workflow:
  #   jobs:
  #     - pull_prod_installer
  #     - build_prod:
  #         requires:
  #           - pull_prod_installer
  #     - hold_deploy_prod:
  #         type: approval
  #         requires:
  #           - build_prod
  #         filters:
  #           branches:
  #             only: master
  #     - deploy_prod:
  #         requires:
  #           - hold_deploy_prod
